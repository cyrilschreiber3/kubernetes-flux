apiVersion: apps/v1
kind: Deployment
metadata:
  name: bind9-zone-updater
  namespace: bind9
spec:
  selector:
    matchLabels:
      app: zone-updater
  template:
    metadata:
      labels:
        app: zone-updater
    spec:
      containers:
        - name: updater
          image: internetsystemsconsortium/bind9:9.20
          imagePullPolicy: Always
          command:
            - /bin/sh
            - -c
            - |
              echo "Zone update started at $(date)"

              # Get servers addresses
              primaryServer=$(nslookup bind9-primary-headless | grep Address | awk '{print $2}' | sed '1d')
              secondaryServers=$(nslookup bind9-secondary-headless | grep Address | awk '{print $2}' | sed '1d')

              # Freeze all zones to prevent updates during copy
              echo "Freezing zones"
              rndc freeze -s $primaryServer

              # Copy the updated zone files
              cp -f /zones-git/*.zone /persistent
              cp -f /zones-git/secrets/*.zone /persistent

              # Thaw all zones to allow updates again
              echo "Thawing zones"
              rndc thaw -s $primaryServer

              echo "Zone update completed at $(date)"

              # Sleep to wait for primary to restart
              sleep 30

              # Refresh secondary Servers
              for ip in $secondaryServers; do
                echo "Refreshing secondary server: $ip"
                rndc refresh . -s $ip
              done

              echo "The end..."
              while true; do
              sleep 3600
              done
          volumeMounts:
            - name: bind9-data
              mountPath: /persistent
      volumes:
        - name: bind9-data
          persistentVolumeClaim:
            claimName: bind9-zone-pvc
